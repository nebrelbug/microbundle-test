{"version":3,"file":"eta.umd.js","sources":["../lib/err.ts","../lib/polyfills.ts","../lib/utils.ts","../lib/parse.ts","../lib/compile-string.ts","../lib/storage.ts","../lib/containers.ts","../lib/config.ts","../lib/compile.ts","../lib/file-utils.ts","../lib/file-handlers.ts","../lib/file-helpers.ts","../lib/render.ts","../lib/node.ts"],"sourcesContent":["function setPrototypeOf(obj: any, proto: any) {\n  // eslint-disable-line @typescript-eslint/no-explicit-any\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(obj, proto)\n  } else {\n    obj.__proto__ = proto\n  }\n}\n\n// This is pretty much the only way to get nice, extended Errors\n// without using ES6\n\n/**\n * This returns a new Error with a custom prototype. Note that it's _not_ a constructor\n *\n * @param message Error message\n *\n * **Example**\n *\n * ```js\n * throw EtaErr(\"template not found\")\n * ```\n */\n\nexport default function EtaErr(message: string): Error {\n  const err = new Error(message)\n  setPrototypeOf(err, EtaErr.prototype)\n  return err as Error\n}\n\nEtaErr.prototype = Object.create(Error.prototype, {\n  name: { value: \"Eta Error\", enumerable: false }\n})\n\n/**\n * Throws an EtaErr with a nicely formatted error and message showing where in the template the error occurred.\n */\n\nexport function ParseErr(message: string, str: string, indx: number): void {\n  const whitespace = str.slice(0, indx).split(/\\n/)\n\n  const lineNo = whitespace.length\n  const colNo = whitespace[lineNo - 1].length + 1\n  message +=\n    \" at line \" +\n    lineNo +\n    \" col \" +\n    colNo +\n    \":\\n\\n\" +\n    \"  \" +\n    str.split(/\\n/)[lineNo - 1] +\n    \"\\n\" +\n    \"  \" +\n    Array(colNo).join(\" \") +\n    \"^\"\n  throw EtaErr(message)\n}\n","export const promiseImpl = Promise\n\nexport function getAsyncFunctionConstructor(): Function {\n  return async function () {}.constructor\n}\n\nexport function trimLeft(str: string): string {\n  return str.trimStart()\n}\n\nexport function trimRight(str: string): string {\n  return str.trimEnd()\n}\n","// TODO: allow '-' to trim up until newline. Use [^\\S\\n\\r] instead of \\s\n// TODO: only include trimLeft polyfill if not in ES6\n\nimport { trimLeft, trimRight } from \"./polyfills.js\"\n\n/* TYPES */\n\nimport type { EtaConfig } from \"./config.js\"\n\ninterface EscapeMap {\n  \"&\": \"&amp;\"\n  \"<\": \"&lt;\"\n  \">\": \"&gt;\"\n  '\"': \"&quot;\"\n  \"'\": \"&#39;\"\n  [index: string]: string\n}\n\n/* END TYPES */\n\nexport function hasOwnProp(obj: object, prop: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, prop)\n}\n\nexport function copyProps<T>(toObj: T, fromObj: T): T {\n  for (const key in fromObj) {\n    if (hasOwnProp(fromObj as unknown as object, key)) {\n      toObj[key] = fromObj[key]\n    }\n  }\n  return toObj\n}\n\n/**\n * Takes a string within a template and trims it, based on the preceding tag's whitespace control and `config.autoTrim`\n */\n\nfunction trimWS(\n  str: string,\n  config: EtaConfig,\n  wsLeft: string | false,\n  wsRight?: string | false\n): string {\n  let leftTrim\n  let rightTrim\n\n  if (Array.isArray(config.autoTrim)) {\n    // kinda confusing\n    // but _}} will trim the left side of the following string\n    leftTrim = config.autoTrim[1]\n    rightTrim = config.autoTrim[0]\n  } else {\n    leftTrim = rightTrim = config.autoTrim\n  }\n\n  if (wsLeft || wsLeft === false) {\n    leftTrim = wsLeft\n  }\n\n  if (wsRight || wsRight === false) {\n    rightTrim = wsRight\n  }\n\n  if (!rightTrim && !leftTrim) {\n    return str\n  }\n\n  if (leftTrim === \"slurp\" && rightTrim === \"slurp\") {\n    return str.trim()\n  }\n\n  if (leftTrim === \"_\" || leftTrim === \"slurp\") {\n    // console.log('trimming left' + leftTrim)\n    // full slurp\n\n    str = trimLeft(str)\n  } else if (leftTrim === \"-\" || leftTrim === \"nl\") {\n    // nl trim\n    str = str.replace(/^(?:\\r\\n|\\n|\\r)/, \"\")\n  }\n\n  if (rightTrim === \"_\" || rightTrim === \"slurp\") {\n    // full slurp\n    str = trimRight(str)\n  } else if (rightTrim === \"-\" || rightTrim === \"nl\") {\n    // nl trim\n    str = str.replace(/(?:\\r\\n|\\n|\\r)$/, \"\") // TODO: make sure this gets \\r\\n\n  }\n\n  return str\n}\n\n/**\n * A map of special HTML characters to their XML-escaped equivalents\n */\n\nconst escMap: EscapeMap = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#39;\"\n}\n\nfunction replaceChar(s: string): string {\n  return escMap[s]\n}\n\n/**\n * XML-escapes an input value after converting it to a string\n *\n * @param str - Input value (usually a string)\n * @returns XML-escaped string\n */\n\nfunction XMLEscape(str: any): string {\n  // eslint-disable-line @typescript-eslint/no-explicit-any\n  // To deal with XSS. Based on Escape implementations of Mustache.JS and Marko, then customized.\n  const newStr = String(str)\n  if (/[&<>\"']/.test(newStr)) {\n    return newStr.replace(/[&<>\"']/g, replaceChar)\n  } else {\n    return newStr\n  }\n}\n\nexport { trimWS, XMLEscape }\n","import { ParseErr } from \"./err.js\"\nimport { trimWS } from \"./utils.js\"\n\n/* TYPES */\n\nimport type { EtaConfig } from \"./config.js\"\n\nexport type TagType = \"r\" | \"e\" | \"i\" | \"\"\n\nexport interface TemplateObject {\n  t: TagType\n  val: string\n}\n\nexport type AstObject = string | TemplateObject\n\n/* END TYPES */\n\nconst templateLitReg =\n  /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})*}|(?!\\${)[^\\\\`])*`/g\n\nconst singleQuoteReg = /'(?:\\\\[\\s\\w\"'\\\\`]|[^\\n\\r'\\\\])*?'/g\n\nconst doubleQuoteReg = /\"(?:\\\\[\\s\\w\"'\\\\`]|[^\\n\\r\"\\\\])*?\"/g\n\n/** Escape special regular expression characters inside a string */\n\nfunction escapeRegExp(string: string) {\n  // From MDN\n  return string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, \"\\\\$&\") // $& means the whole matched string\n}\n\nexport default function parse(\n  str: string,\n  config: EtaConfig\n): Array<AstObject> {\n  let buffer: Array<AstObject> = []\n  let trimLeftOfNextStr: string | false = false\n  let lastIndex = 0\n  const parseOptions = config.parse\n\n  if (config.plugins) {\n    for (let i = 0; i < config.plugins.length; i++) {\n      const plugin = config.plugins[i]\n      if (plugin.processTemplate) {\n        str = plugin.processTemplate(str, config)\n      }\n    }\n  }\n\n  /* Adding for EJS compatibility */\n  if (config.rmWhitespace) {\n    // Code taken directly from EJS\n    // Have to use two separate replaces here as `^` and `$` operators don't\n    // work well with `\\r` and empty lines don't work well with the `m` flag.\n    // Essentially, this replaces the whitespace at the beginning and end of\n    // each line and removes multiple newlines.\n    str = str.replace(/[\\r\\n]+/g, \"\\n\").replace(/^\\s+|\\s+$/gm, \"\")\n  }\n  /* End rmWhitespace option */\n\n  templateLitReg.lastIndex = 0\n  singleQuoteReg.lastIndex = 0\n  doubleQuoteReg.lastIndex = 0\n\n  function pushString(strng: string, shouldTrimRightOfString?: string | false) {\n    if (strng) {\n      // if string is truthy it must be of type 'string'\n\n      strng = trimWS(\n        strng,\n        config,\n        trimLeftOfNextStr, // this will only be false on the first str, the next ones will be null or undefined\n        shouldTrimRightOfString\n      )\n\n      if (strng) {\n        // replace \\ with \\\\, ' with \\'\n        // we're going to convert all CRLF to LF so it doesn't take more than one replace\n\n        strng = strng.replace(/\\\\|'/g, \"\\\\$&\").replace(/\\r\\n|\\n|\\r/g, \"\\\\n\")\n\n        buffer.push(strng)\n      }\n    }\n  }\n\n  const prefixes = [\n    parseOptions.exec,\n    parseOptions.interpolate,\n    parseOptions.raw\n  ].reduce(function (accumulator, prefix) {\n    if (accumulator && prefix) {\n      return accumulator + \"|\" + escapeRegExp(prefix)\n    } else if (prefix) {\n      // accumulator is falsy\n      return escapeRegExp(prefix)\n    } else {\n      // prefix and accumulator are both falsy\n      return accumulator\n    }\n  }, \"\")\n\n  const parseOpenReg = new RegExp(\n    \"([^]*?)\" +\n      escapeRegExp(config.tags[0]) +\n      \"(-|_)?\\\\s*(\" +\n      prefixes +\n      \")?\\\\s*\",\n    \"g\"\n  )\n\n  const parseCloseReg = new RegExp(\n    \"'|\\\"|`|\\\\/\\\\*|(\\\\s*(-|_)?\" + escapeRegExp(config.tags[1]) + \")\",\n    \"g\"\n  )\n  // TODO: benchmark having the \\s* on either side vs using str.trim()\n\n  let m\n\n  while ((m = parseOpenReg.exec(str))) {\n    lastIndex = m[0].length + m.index\n\n    const precedingString = m[1]\n    const wsLeft = m[2]\n    const prefix = m[3] || \"\" // by default either ~, =, or empty\n\n    pushString(precedingString, wsLeft)\n\n    parseCloseReg.lastIndex = lastIndex\n    let closeTag\n    let currentObj: AstObject | false = false\n\n    while ((closeTag = parseCloseReg.exec(str))) {\n      if (closeTag[1]) {\n        let content = str.slice(lastIndex, closeTag.index)\n\n        parseOpenReg.lastIndex = lastIndex = parseCloseReg.lastIndex\n\n        trimLeftOfNextStr = closeTag[2]\n\n        const currentType: TagType =\n          prefix === parseOptions.exec\n            ? \"e\"\n            : prefix === parseOptions.raw\n            ? \"r\"\n            : prefix === parseOptions.interpolate\n            ? \"i\"\n            : \"\"\n\n        currentObj = { t: currentType, val: content }\n        break\n      } else {\n        const char = closeTag[0]\n        if (char === \"/*\") {\n          const commentCloseInd = str.indexOf(\"*/\", parseCloseReg.lastIndex)\n\n          if (commentCloseInd === -1) {\n            ParseErr(\"unclosed comment\", str, closeTag.index)\n          }\n          parseCloseReg.lastIndex = commentCloseInd\n        } else if (char === \"'\") {\n          singleQuoteReg.lastIndex = closeTag.index\n\n          const singleQuoteMatch = singleQuoteReg.exec(str)\n          if (singleQuoteMatch) {\n            parseCloseReg.lastIndex = singleQuoteReg.lastIndex\n          } else {\n            ParseErr(\"unclosed string\", str, closeTag.index)\n          }\n        } else if (char === '\"') {\n          doubleQuoteReg.lastIndex = closeTag.index\n          const doubleQuoteMatch = doubleQuoteReg.exec(str)\n\n          if (doubleQuoteMatch) {\n            parseCloseReg.lastIndex = doubleQuoteReg.lastIndex\n          } else {\n            ParseErr(\"unclosed string\", str, closeTag.index)\n          }\n        } else if (char === \"`\") {\n          templateLitReg.lastIndex = closeTag.index\n          const templateLitMatch = templateLitReg.exec(str)\n          if (templateLitMatch) {\n            parseCloseReg.lastIndex = templateLitReg.lastIndex\n          } else {\n            ParseErr(\"unclosed string\", str, closeTag.index)\n          }\n        }\n      }\n    }\n    if (currentObj) {\n      buffer.push(currentObj)\n    } else {\n      ParseErr(\"unclosed tag\", str, m.index + precedingString.length)\n    }\n  }\n\n  pushString(str.slice(lastIndex, str.length), false)\n\n  if (config.plugins) {\n    for (let i = 0; i < config.plugins.length; i++) {\n      const plugin = config.plugins[i]\n      if (plugin.processAST) {\n        buffer = plugin.processAST(buffer, config)\n      }\n    }\n  }\n\n  return buffer\n}\n","import Parse from \"./parse.js\"\n\n/* TYPES */\n\nimport type { EtaConfig } from \"./config.js\"\nimport type { AstObject } from \"./parse.js\"\n\n/* END TYPES */\n\n/**\n * Compiles a template string to a function string. Most often users just use `compile()`, which calls `compileToString` and creates a new function using the result\n *\n * **Example**\n *\n * ```js\n * compileToString(\"Hi <%= it.user %>\", eta.config)\n * // \"var tR='',include=E.include.bind(E),includeFile=E.includeFile.bind(E);tR+='Hi ';tR+=E.e(it.user);if(cb){cb(null,tR)} return tR\"\n * ```\n */\n\nexport default function compileToString(\n  str: string,\n  config: EtaConfig\n): string {\n  const buffer: Array<AstObject> = Parse(str, config)\n\n  let res =\n    \"var tR='',__l,__lP\" +\n    (config.include ? \",include=E.include.bind(E)\" : \"\") +\n    (config.includeFile ? \",includeFile=E.includeFile.bind(E)\" : \"\") +\n    \"\\nfunction layout(p,d){__l=p;__lP=d}\\n\" +\n    (config.useWith ? \"with(\" + config.varName + \"||{}){\" : \"\") +\n    compileScope(buffer, config) +\n    (config.includeFile\n      ? \"if(__l)tR=\" +\n        (config.async ? \"await \" : \"\") +\n        `includeFile(__l,Object.assign(${config.varName},{body:tR},__lP))\\n`\n      : config.include\n      ? \"if(__l)tR=\" +\n        (config.async ? \"await \" : \"\") +\n        `include(__l,Object.assign(${config.varName},{body:tR},__lP))\\n`\n      : \"\") +\n    \"if(cb){cb(null,tR)} return tR\" +\n    (config.useWith ? \"}\" : \"\")\n\n  if (config.plugins) {\n    for (let i = 0; i < config.plugins.length; i++) {\n      const plugin = config.plugins[i]\n      if (plugin.processFnString) {\n        res = plugin.processFnString(res, config)\n      }\n    }\n  }\n\n  return res\n}\n\n/**\n * Loops through the AST generated by `parse` and transform each item into JS calls\n *\n * **Example**\n *\n * ```js\n * // AST version of 'Hi <%= it.user %>'\n * let templateAST = ['Hi ', { val: 'it.user', t: 'i' }]\n * compileScope(templateAST, eta.config)\n * // \"tR+='Hi ';tR+=E.e(it.user);\"\n * ```\n */\n\nfunction compileScope(buff: Array<AstObject>, config: EtaConfig) {\n  let i = 0\n  const buffLength = buff.length\n  let returnStr = \"\"\n\n  for (i; i < buffLength; i++) {\n    const currentBlock = buff[i]\n    if (typeof currentBlock === \"string\") {\n      const str = currentBlock\n\n      // we know string exists\n      returnStr += \"tR+='\" + str + \"'\\n\"\n    } else {\n      const type = currentBlock.t // ~, s, !, ?, r\n      let content = currentBlock.val || \"\"\n\n      if (type === \"r\") {\n        // raw\n\n        if (config.filter) {\n          content = \"E.filter(\" + content + \")\"\n        }\n\n        returnStr += \"tR+=\" + content + \"\\n\"\n      } else if (type === \"i\") {\n        // interpolate\n\n        if (config.filter) {\n          content = \"E.filter(\" + content + \")\"\n        }\n\n        if (config.autoEscape) {\n          content = \"E.e(\" + content + \")\"\n        }\n        returnStr += \"tR+=\" + content + \"\\n\"\n        // reference\n      } else if (type === \"e\") {\n        // execute\n        returnStr += content + \"\\n\" // you need a \\n in case you have <% } %>\n      }\n    }\n  }\n\n  return returnStr\n}\n","import { copyProps } from \"./utils.js\"\n\n/**\n * Handles storage and accessing of values\n *\n * In this case, we use it to store compiled template functions\n * Indexed by their `name` or `filename`\n */\nclass Cacher<T> {\n  constructor(private cache: Record<string, T>) {}\n  define(key: string, val: T): void {\n    this.cache[key] = val\n  }\n  get(key: string): T {\n    // string | array.\n    // TODO: allow array of keys to look down\n    // TODO: create plugin to allow referencing helpers, filters with dot notation\n    return this.cache[key]\n  }\n  remove(key: string): void {\n    delete this.cache[key]\n  }\n  reset(): void {\n    this.cache = {}\n  }\n  load(cacheObj: Record<string, T>): void {\n    copyProps(this.cache, cacheObj)\n  }\n}\n\nexport { Cacher }\n","import { Cacher } from \"./storage.js\"\n\n/* TYPES */\n\nimport type { TemplateFunction } from \"./compile.js\"\n\n/* END TYPES */\n\n/**\n * Eta's template storage\n *\n * Stores partials and cached templates\n */\n\nconst templates = new Cacher<TemplateFunction>({})\n\nexport { templates }\n","import { templates } from \"./containers.js\"\nimport { copyProps, XMLEscape } from \"./utils.js\"\nimport EtaErr from \"./err.js\"\n\n/* TYPES */\n\nimport type { TemplateFunction } from \"./compile.js\"\nimport type { Cacher } from \"./storage.js\"\n\ntype trimConfig = \"nl\" | \"slurp\" | false\n\nexport interface EtaConfig {\n  /** Whether or not to automatically XML-escape interpolations. Default true */\n  autoEscape: boolean\n\n  /** Configure automatic whitespace trimming. Default `[false, 'nl']` */\n  autoTrim: trimConfig | [trimConfig, trimConfig]\n\n  /** Compile to async function */\n  async: boolean\n\n  /** Whether or not to cache templates if `name` or `filename` is passed */\n  cache: boolean\n\n  /** XML-escaping function */\n  e: (str: string) => string\n\n  /** Parsing options */\n  parse: {\n    /** Which prefix to use for evaluation. Default `\"\"` */\n    exec: string\n\n    /** Which prefix to use for interpolation. Default `\"=\"` */\n    interpolate: string\n\n    /** Which prefix to use for raw interpolation. Default `\"~\"` */\n    raw: string\n  }\n\n  /** Array of plugins */\n  plugins: Array<{\n    processFnString?: Function\n    processAST?: Function\n    processTemplate?: Function\n  }>\n\n  /** Remove all safe-to-remove whitespace */\n  rmWhitespace: boolean\n\n  /** Delimiters: by default `['<%', '%>']` */\n  tags: [string, string]\n\n  /** Holds template cache */\n  templates: Cacher<TemplateFunction>\n\n  /** Name of the data object. Default `it` */\n  varName: string\n\n  /** Absolute path to template file */\n  filename?: string\n\n  /** Holds cache of resolved filepaths. Set to `false` to disable */\n  filepathCache?: Record<string, string> | false\n\n  /** A filter function applied to every interpolation or raw interpolation */\n  filter?: Function\n\n  /** Function to include templates by name */\n  include?: Function\n\n  /** Function to include templates by filepath */\n  includeFile?: Function\n\n  /** Name of template */\n  name?: string\n\n  /** Where should absolute paths begin? Default '/' */\n  root?: string\n\n  /** Make data available on the global object instead of varName */\n  useWith?: boolean\n\n  /** Whether or not to cache templates if `name` or `filename` is passed: duplicate of `cache` */\n  \"view cache\"?: boolean\n\n  /** Directory or directories that contain templates */\n  views?: string | Array<string>\n\n  [index: string]: any // eslint-disable-line @typescript-eslint/no-explicit-any\n}\n\nexport interface EtaConfigWithFilename extends EtaConfig {\n  filename: string\n}\n\nexport type PartialConfig = Partial<EtaConfig>\n\n/* END TYPES */\n\n/**\n * Include a template based on its name (or filepath, if it's already been cached).\n *\n * Called like `include(templateNameOrPath, data)`\n */\n\nfunction includeHelper(\n  this: EtaConfig,\n  templateNameOrPath: string,\n  data: object\n): string {\n  const template = this.templates.get(templateNameOrPath)\n  if (!template) {\n    throw EtaErr('Could not fetch template \"' + templateNameOrPath + '\"')\n  }\n  return template(data, this)\n}\n\n/** Eta's base (global) configuration */\nconst config: EtaConfig = {\n  async: false,\n  autoEscape: true,\n  autoTrim: [false, \"nl\"],\n  cache: false,\n  e: XMLEscape,\n  include: includeHelper,\n  parse: {\n    exec: \"\",\n    interpolate: \"=\",\n    raw: \"~\"\n  },\n  plugins: [],\n  rmWhitespace: false,\n  tags: [\"<%\", \"%>\"],\n  templates: templates,\n  useWith: false,\n  varName: \"it\"\n}\n\n/**\n * Takes one or two partial (not necessarily complete) configuration objects, merges them 1 layer deep into eta.config, and returns the result\n *\n * @param override Partial configuration object\n * @param baseConfig Partial configuration object to merge before `override`\n *\n * **Example**\n *\n * ```js\n * let customConfig = getConfig({tags: ['!#', '#!']})\n * ```\n */\n\nfunction getConfig(override: PartialConfig, baseConfig?: EtaConfig): EtaConfig {\n  // TODO: run more tests on this\n\n  const res: PartialConfig = {} // Linked\n  copyProps(res, config) // Creates deep clone of eta.config, 1 layer deep\n\n  if (baseConfig) {\n    copyProps(res, baseConfig)\n  }\n\n  if (override) {\n    copyProps(res, override)\n  }\n\n  return res as EtaConfig\n}\n\n/** Update Eta's base config */\n\nfunction configure(options: PartialConfig): Partial<EtaConfig> {\n  return copyProps(config, options)\n}\n\nexport { config, getConfig, configure }\n","import compileToString from \"./compile-string.js\"\nimport { getConfig } from \"./config.js\"\nimport EtaErr from \"./err.js\"\n\n/* TYPES */\n\nimport type { EtaConfig, PartialConfig } from \"./config.js\"\nimport type { CallbackFn } from \"./file-handlers.js\"\nimport { getAsyncFunctionConstructor } from \"./polyfills.js\"\nexport type TemplateFunction = (\n  data: object,\n  config: EtaConfig,\n  cb?: CallbackFn\n) => string\n\n/* END TYPES */\n\n/**\n * Takes a template string and returns a template function that can be called with (data, config, [cb])\n *\n * @param str - The template string\n * @param config - A custom configuration object (optional)\n *\n * **Example**\n *\n * ```js\n * let compiledFn = eta.compile(\"Hi <%= it.user %>\")\n * // function anonymous()\n * let compiledFnStr = compiledFn.toString()\n * // \"function anonymous(it,E,cb\\n) {\\nvar tR='',include=E.include.bind(E),includeFile=E.includeFile.bind(E);tR+='Hi ';tR+=E.e(it.user);if(cb){cb(null,tR)} return tR\\n}\"\n * ```\n */\n\nexport default function compile(\n  str: string,\n  config?: PartialConfig\n): TemplateFunction {\n  const options: EtaConfig = getConfig(config || {})\n\n  /* ASYNC HANDLING */\n  // The below code is modified from mde/ejs. All credit should go to them.\n  const ctor = options.async\n    ? (getAsyncFunctionConstructor() as FunctionConstructor)\n    : Function\n  /* END ASYNC HANDLING */\n\n  try {\n    return new ctor(\n      options.varName,\n      \"E\", // EtaConfig\n      \"cb\", // optional callback\n      compileToString(str, options)\n    ) as TemplateFunction // eslint-disable-line no-new-func\n  } catch (e) {\n    if (e instanceof SyntaxError) {\n      throw EtaErr(\n        \"Bad template syntax\\n\\n\" +\n          e.message +\n          \"\\n\" +\n          Array(e.message.length + 1).join(\"=\") +\n          \"\\n\" +\n          compileToString(str, options) +\n          \"\\n\" // This will put an extra newline before the callstack for extra readability\n      )\n    } else {\n      throw e\n    }\n  }\n}\n","import { path, existsSync, readFileSync } from \"./file-methods.js\"\nconst _BOM = /^\\uFEFF/\n\n// express is set like: app.engine('html', require('eta').renderFile)\n\nimport EtaErr from \"./err.js\"\n\n/* TYPES */\n\nimport type { EtaConfig } from \"./config.js\"\n\n/* END TYPES */\n\n/**\n * Get the path to the included file from the parent file path and the\n * specified path.\n *\n * If `name` does not have an extension, it will default to `.eta`\n *\n * @param name specified path\n * @param parentfile parent file path\n * @param isDirectory whether parentfile is a directory\n * @return absolute path to template\n */\n\nfunction getWholeFilePath(\n  name: string,\n  parentfile: string,\n  isDirectory?: boolean\n): string {\n  const includePath =\n    path.resolve(\n      isDirectory ? parentfile : path.dirname(parentfile), // returns directory the parent file is in\n      name // file\n    ) + (path.extname(name) ? \"\" : \".eta\")\n  return includePath\n}\n\n/**\n * Get the absolute path to an included template\n *\n * If this is called with an absolute path (for example, starting with '/' or 'C:\\')\n * then Eta will attempt to resolve the absolute path within options.views. If it cannot,\n * Eta will fallback to options.root or '/'\n *\n * If this is called with a relative path, Eta will:\n * - Look relative to the current template (if the current template has the `filename` property)\n * - Look inside each directory in options.views\n *\n * Note: if Eta is unable to find a template using path and options, it will throw an error.\n *\n * @param path    specified path\n * @param options compilation options\n * @return absolute path to template\n */\n\nfunction getPath(path: string, options: EtaConfig): string {\n  let includePath: string | false = false\n  const views = options.views\n  let searchedPaths: Array<string> = []\n\n  // If these four values are the same,\n  // getPath() will return the same result every time.\n  // We can cache the result to avoid expensive\n  // file operations.\n  const pathOptions = JSON.stringify({\n    filename: options.filename, // filename of the template which called includeFile()\n    path: path,\n    root: options.root,\n    views: options.views\n  })\n\n  if (\n    options.cache &&\n    options.filepathCache &&\n    options.filepathCache[pathOptions]\n  ) {\n    // Use the cached filepath\n    return options.filepathCache[pathOptions]\n  }\n\n  /** Add a filepath to the list of paths we've checked for a template */\n  function addPathToSearched(pathSearched: string) {\n    if (!searchedPaths.includes(pathSearched)) {\n      searchedPaths.push(pathSearched)\n    }\n  }\n\n  /**\n   * Take a filepath (like 'partials/mypartial.eta'). Attempt to find the template file inside `views`;\n   * return the resulting template file path, or `false` to indicate that the template was not found.\n   *\n   * @param views the filepath that holds templates, or an array of filepaths that hold templates\n   * @param path the path to the template\n   */\n\n  function searchViews(\n    views: Array<string> | string | undefined,\n    path: string\n  ): string | false {\n    let filePath\n\n    // If views is an array, then loop through each directory\n    // And attempt to find the template\n    if (\n      Array.isArray(views) &&\n      views.some(function (v) {\n        filePath = getWholeFilePath(path, v, true)\n\n        addPathToSearched(filePath)\n\n        return existsSync(filePath)\n      })\n    ) {\n      // If the above returned true, we know that the filePath was just set to a path\n      // That exists (Array.some() returns as soon as it finds a valid element)\n      return filePath as unknown as string\n    } else if (typeof views === \"string\") {\n      // Search for the file if views is a single directory\n      filePath = getWholeFilePath(path, views, true)\n\n      addPathToSearched(filePath)\n\n      if (existsSync(filePath)) {\n        return filePath\n      }\n    }\n\n    // Unable to find a file\n    return false\n  }\n\n  // Path starts with '/', 'C:\\', etc.\n  const match = /^[A-Za-z]+:\\\\|^\\//.exec(path)\n\n  // Absolute path, like /partials/partial.eta\n  if (match && match.length) {\n    // We have to trim the beginning '/' off the path, or else\n    // path.resolve(dir, path) will always resolve to just path\n    const formattedPath = path.replace(/^\\/*/, \"\")\n\n    // First, try to resolve the path within options.views\n    includePath = searchViews(views, formattedPath)\n    if (!includePath) {\n      // If that fails, searchViews will return false. Try to find the path\n      // inside options.root (by default '/', the base of the filesystem)\n      const pathFromRoot = getWholeFilePath(\n        formattedPath,\n        options.root || \"/\",\n        true\n      )\n\n      addPathToSearched(pathFromRoot)\n\n      includePath = pathFromRoot\n    }\n  } else {\n    // Relative paths\n    // Look relative to a passed filename first\n    if (options.filename) {\n      const filePath = getWholeFilePath(path, options.filename)\n\n      addPathToSearched(filePath)\n\n      if (existsSync(filePath)) {\n        includePath = filePath\n      }\n    }\n    // Then look for the template in options.views\n    if (!includePath) {\n      includePath = searchViews(views, path)\n    }\n    if (!includePath) {\n      throw EtaErr(\n        'Could not find the template \"' +\n          path +\n          '\". Paths tried: ' +\n          searchedPaths\n      )\n    }\n  }\n\n  // If caching and filepathCache are enabled,\n  // cache the input & output of this function.\n  if (options.cache && options.filepathCache) {\n    options.filepathCache[pathOptions] = includePath\n  }\n\n  return includePath\n}\n\n/**\n * Reads a file synchronously\n */\n\nfunction readFile(filePath: string): string {\n  try {\n    return readFileSync(filePath).toString().replace(_BOM, \"\") // TODO: is replacing BOM's necessary?\n  } catch {\n    throw EtaErr(\"Failed to read template at '\" + filePath + \"'\")\n  }\n}\n\nexport { getPath, readFile }\n","// express is set like: app.engine('html', require('eta').renderFile)\n\nimport EtaErr from \"./err.js\"\nimport compile from \"./compile.js\"\nimport { getConfig } from \"./config.js\"\nimport { getPath, readFile } from \"./file-utils.js\"\nimport { copyProps } from \"./utils.js\"\nimport { promiseImpl } from \"./polyfills.js\"\n\n/* TYPES */\n\nimport type {\n  EtaConfig,\n  PartialConfig,\n  EtaConfigWithFilename\n} from \"./config.js\"\nimport type { TemplateFunction } from \"./compile.js\"\n\nexport type CallbackFn = (err: Error | null, str?: string) => void\n\ninterface DataObj {\n  /** Express.js settings may be stored here */\n  settings?: {\n    [key: string]: any // eslint-disable-line @typescript-eslint/no-explicit-any\n  }\n  [key: string]: any // eslint-disable-line @typescript-eslint/no-explicit-any\n}\n\ninterface PartialConfigWithFilename extends Partial<EtaConfig> {\n  filename: string\n}\n\n/* END TYPES */\n\n/**\n * Reads a template, compiles it into a function, caches it if caching isn't disabled, returns the function\n *\n * @param filePath Absolute path to template file\n * @param options Eta configuration overrides\n * @param noCache Optionally, make Eta not cache the template\n */\n\nexport function loadFile(\n  filePath: string,\n  options: PartialConfigWithFilename,\n  noCache?: boolean\n): TemplateFunction {\n  const config = getConfig(options)\n  const template = readFile(filePath)\n  try {\n    const compiledTemplate = compile(template, config)\n    if (!noCache) {\n      config.templates.define(\n        (config as EtaConfigWithFilename).filename,\n        compiledTemplate\n      )\n    }\n    return compiledTemplate\n  } catch (e) {\n    throw EtaErr(\n      \"Loading file: \" + filePath + \" failed:\\n\\n\" + (e as Error).message\n    )\n  }\n}\n\n/**\n * Get the template from a string or a file, either compiled on-the-fly or\n * read from cache (if enabled), and cache the template if needed.\n *\n * If `options.cache` is true, this function reads the file from\n * `options.filename` so it must be set prior to calling this function.\n *\n * @param options   compilation options\n * @return Eta template function\n */\n\nfunction handleCache(options: EtaConfigWithFilename): TemplateFunction {\n  const filename = options.filename\n\n  if (options.cache) {\n    const func = options.templates.get(filename)\n    if (func) {\n      return func\n    }\n\n    return loadFile(filename, options)\n  }\n\n  // Caching is disabled, so pass noCache = true\n  return loadFile(filename, options, true)\n}\n\n/**\n * Try calling handleCache with the given options and data and call the\n * callback with the result. If an error occurs, call the callback with\n * the error. Used by renderFile().\n *\n * @param data template data\n * @param options compilation options\n * @param cb callback\n */\n\nfunction tryHandleCache(\n  data: object,\n  options: EtaConfigWithFilename,\n  cb: CallbackFn | undefined\n) {\n  if (cb) {\n    try {\n      // Note: if there is an error while rendering the template,\n      // It will bubble up and be caught here\n      const templateFn = handleCache(options)\n      templateFn(data, options, cb)\n    } catch (err) {\n      return cb(err as Error)\n    }\n  } else {\n    // No callback, try returning a promise\n    if (typeof promiseImpl === \"function\") {\n      return new promiseImpl<string>(function (\n        resolve: Function,\n        reject: Function\n      ) {\n        try {\n          const templateFn = handleCache(options)\n          const result = templateFn(data, options)\n          resolve(result)\n        } catch (err) {\n          reject(err)\n        }\n      })\n    } else {\n      throw EtaErr(\n        \"Please provide a callback function, this env doesn't support Promises\"\n      )\n    }\n  }\n}\n\n/**\n * Get the template function.\n *\n * If `options.cache` is `true`, then the template is cached.\n *\n * This returns a template function and the config object with which that template function should be called.\n *\n * @remarks\n *\n * It's important that this returns a config object with `filename` set.\n * Otherwise, the included file would not be able to use relative paths\n *\n * @param path path for the specified file (if relative, specify `views` on `options`)\n * @param options compilation options\n * @return [Eta template function, new config object]\n */\n\nfunction includeFile(\n  path: string,\n  options: EtaConfig\n): [TemplateFunction, EtaConfig] {\n  // the below creates a new options object, using the parent filepath of the old options object and the path\n  const newFileOptions = getConfig(\n    { filename: getPath(path, options) },\n    options\n  )\n  // TODO: make sure properties are currectly copied over\n  return [handleCache(newFileOptions as EtaConfigWithFilename), newFileOptions]\n}\n\n/**\n * Render a template from a filepath.\n *\n * @param filepath Path to template file. If relative, specify `views` on the config object\n *\n * This can take two different function signatures:\n *\n * - `renderFile(filename, dataAndConfig, [cb])`\n *   - Eta will merge `dataAndConfig` into `eta.config`\n * - `renderFile(filename, data, [config], [cb])`\n *\n * Note that renderFile does not immediately return the rendered result. If you pass in a callback function, it will be called with `(err, res)`. Otherwise, `renderFile` will return a `Promise` that resolves to the render result.\n *\n * **Examples**\n *\n * ```js\n * eta.renderFile(\"./template.eta\", data, {cache: true}, function (err, rendered) {\n *   if (err) console.log(err)\n *   console.log(rendered)\n * })\n *\n * let rendered = await eta.renderFile(\"./template.eta\", data, {cache: true})\n *\n * let rendered = await eta.renderFile(\"./template\", {...data, cache: true})\n * ```\n */\n\nfunction renderFile(\n  filename: string,\n  data: DataObj,\n  config?: PartialConfig,\n  cb?: CallbackFn\n): Promise<string> | void\n\nfunction renderFile(\n  filename: string,\n  data: DataObj,\n  cb?: CallbackFn\n): Promise<string> | void\n\nfunction renderFile(\n  filename: string,\n  data: DataObj,\n  config?: PartialConfig,\n  cb?: CallbackFn\n): Promise<string> | void {\n  /*\n  Here we have some function overloading.\n  Essentially, the first 2 arguments to renderFile should always be the filename and data\n  However, with Express, configuration options will be passed along with the data.\n  Thus, Express will call renderFile with (filename, dataAndOptions, cb)\n  And we want to also make (filename, data, options, cb) available\n  */\n\n  let renderConfig: EtaConfigWithFilename\n  let callback: CallbackFn | undefined\n  data = data || {} // If data is undefined, we don't want accessing data.settings to error\n\n  // First, assign our callback function to `callback`\n  // We can leave it undefined if neither parameter is a function;\n  // Callbacks are optional\n  if (typeof cb === \"function\") {\n    // The 4th argument is the callback\n    callback = cb\n  } else if (typeof config === \"function\") {\n    // The 3rd arg is the callback\n    callback = config\n  }\n\n  // If there is a config object passed in explicitly, use it\n  if (typeof config === \"object\") {\n    renderConfig = getConfig(\n      (config as PartialConfig) || {}\n    ) as EtaConfigWithFilename\n  } else {\n    // Otherwise, get the config from the data object\n    // And then grab some config options from data.settings\n    // Which is where Express sometimes stores them\n    renderConfig = getConfig(data as PartialConfig) as EtaConfigWithFilename\n    if (data.settings) {\n      // Pull a few things from known locations\n      if (data.settings.views) {\n        renderConfig.views = data.settings.views\n      }\n      if (data.settings[\"view cache\"]) {\n        renderConfig.cache = true\n      }\n      // Undocumented after Express 2, but still usable, esp. for\n      // items that are unsafe to be passed along with data, like `root`\n      const viewOpts = data.settings[\"view options\"]\n\n      if (viewOpts) {\n        copyProps(renderConfig, viewOpts)\n      }\n    }\n  }\n\n  // Set the filename option on the template\n  // This will first try to resolve the file path (see getPath for details)\n  renderConfig.filename = getPath(filename, renderConfig)\n\n  return tryHandleCache(data, renderConfig, callback)\n}\n\n/**\n * Render a template from a filepath asynchronously.\n *\n * @param filepath Path to template file. If relative, specify `views` on the config object\n *\n * This can take two different function signatures:\n *\n * - `renderFile(filename, dataAndConfig, [cb])`\n *   - Eta will merge `dataAndConfig` into `eta.config`\n * - `renderFile(filename, data, [config], [cb])`\n *\n * Note that renderFile does not immediately return the rendered result. If you pass in a callback function, it will be called with `(err, res)`. Otherwise, `renderFile` will return a `Promise` that resolves to the render result.\n *\n * **Examples**\n *\n * ```js\n * eta.renderFile(\"./template.eta\", data, {cache: true}, function (err, rendered) {\n *   if (err) console.log(err)\n *   console.log(rendered)\n * })\n *\n * let rendered = await eta.renderFile(\"./template.eta\", data, {cache: true})\n *\n * let rendered = await eta.renderFile(\"./template\", {...data, cache: true})\n * ```\n */\n\nfunction renderFileAsync(\n  filename: string,\n  data: DataObj,\n  config?: PartialConfig,\n  cb?: CallbackFn\n): Promise<string> | void\n\nfunction renderFileAsync(\n  filename: string,\n  data: DataObj,\n  cb?: CallbackFn\n): Promise<string> | void\n\nfunction renderFileAsync(\n  filename: string,\n  data: DataObj,\n  config?: PartialConfig,\n  cb?: CallbackFn\n): Promise<string> | void {\n  return renderFile(\n    filename,\n    typeof config === \"function\" ? { ...data, async: true } : data,\n    typeof config === \"object\" ? { ...config, async: true } : config,\n    cb\n  )\n}\n\nexport { includeFile, renderFile, renderFileAsync }\n","import { includeFile } from \"./file-handlers.js\"\n\n/* TYPES */\n\nimport type { EtaConfig } from \"./config.js\"\n\ninterface GenericData {\n  [index: string]: any // eslint-disable-line @typescript-eslint/no-explicit-any\n}\n\n/* END TYPES */\n\n/**\n * Called with `includeFile(path, data)`\n */\n\nexport function includeFileHelper(\n  this: EtaConfig,\n  path: string,\n  data: GenericData\n): string {\n  const templateAndConfig = includeFile(path, this)\n  return templateAndConfig[0](data, templateAndConfig[1])\n}\n","import compile from \"./compile.js\"\nimport { getConfig } from \"./config.js\"\nimport { promiseImpl } from \"./polyfills.js\"\nimport EtaErr from \"./err.js\"\n\n/* TYPES */\n\nimport type { EtaConfig, PartialConfig } from \"./config.js\"\nimport type { TemplateFunction } from \"./compile.js\"\nimport type { CallbackFn } from \"./file-handlers.js\"\n\n/* END TYPES */\n\nfunction handleCache(\n  template: string | TemplateFunction,\n  options: EtaConfig\n): TemplateFunction {\n  if (options.cache && options.name && options.templates.get(options.name)) {\n    return options.templates.get(options.name)\n  }\n\n  const templateFunc =\n    typeof template === \"function\" ? template : compile(template, options)\n\n  // Note that we don't have to check if it already exists in the cache;\n  // it would have returned earlier if it had\n  if (options.cache && options.name) {\n    options.templates.define(options.name, templateFunc)\n  }\n\n  return templateFunc\n}\n\n/**\n * Render a template\n *\n * If `template` is a string, Eta will compile it to a function and then call it with the provided data.\n * If `template` is a template function, Eta will call it with the provided data.\n *\n * If `config.async` is `false`, Eta will return the rendered template.\n *\n * If `config.async` is `true` and there's a callback function, Eta will call the callback with `(err, renderedTemplate)`.\n * If `config.async` is `true` and there's not a callback function, Eta will return a Promise that resolves to the rendered template.\n *\n * If `config.cache` is `true` and `config` has a `name` or `filename` property, Eta will cache the template on the first render and use the cached template for all subsequent renders.\n *\n * @param template Template string or template function\n * @param data Data to render the template with\n * @param config Optional config options\n * @param cb Callback function\n */\n\nexport default function render(\n  template: string | TemplateFunction,\n  data: object,\n  config?: PartialConfig,\n  cb?: CallbackFn\n): string | Promise<string> | void {\n  const options = getConfig(config || {})\n\n  if (options.async) {\n    if (cb) {\n      // If user passes callback\n      try {\n        // Note: if there is an error while rendering the template,\n        // It will bubble up and be caught here\n        const templateFn = handleCache(template, options)\n        templateFn(data, options, cb)\n      } catch (err) {\n        return cb(err as Error)\n      }\n    } else {\n      // No callback, try returning a promise\n      if (typeof promiseImpl === \"function\") {\n        return new promiseImpl(function (resolve: Function, reject: Function) {\n          try {\n            resolve(handleCache(template, options)(data, options))\n          } catch (err) {\n            reject(err)\n          }\n        })\n      } else {\n        throw EtaErr(\n          \"Please provide a callback function, this env doesn't support Promises\"\n        )\n      }\n    }\n  } else {\n    return handleCache(template, options)(data, options)\n  }\n}\n\n/**\n * Render a template asynchronously\n *\n * If `template` is a string, Eta will compile it to a function and call it with the provided data.\n * If `template` is a function, Eta will call it with the provided data.\n *\n * If there is a callback function, Eta will call it with `(err, renderedTemplate)`.\n * If there is not a callback function, Eta will return a Promise that resolves to the rendered template\n *\n * @param template Template string or template function\n * @param data Data to render the template with\n * @param config Optional config options\n * @param cb Callback function\n */\n\nexport function renderAsync(\n  template: string | TemplateFunction,\n  data: object,\n  config?: PartialConfig,\n  cb?: CallbackFn\n): string | Promise<string> | void {\n  // Using Object.assign to lower bundle size, using spread operator makes it larger because of typescript injected polyfills\n  return render(template, data, Object.assign({}, config, { async: true }), cb)\n}\n","// @denoify-ignore\n\n/* Export file stuff */\nimport { includeFileHelper } from \"./file-helpers.js\"\nimport { config } from \"./config.js\"\n\nconfig.includeFile = includeFileHelper\nconfig.filepathCache = {}\n\nexport {\n  loadFile,\n  renderFile,\n  renderFileAsync,\n  renderFile as __express\n} from \"./file-handlers.js\"\n\n/* End file stuff */\n\nexport { default as compileToString } from \"./compile-string.js\"\nexport { default as compile } from \"./compile.js\"\nexport { default as parse } from \"./parse.js\"\nexport { default as render, renderAsync } from \"./render.js\"\nexport { templates } from \"./containers.js\"\nexport {\n  config,\n  config as defaultConfig,\n  getConfig,\n  configure\n} from \"./config.js\"\n"],"names":["setPrototypeOf","obj","proto","Object","__proto__","EtaErr","message","err","Error","prototype","create","name","value","enumerable","ParseErr","str","indx","whitespace","slice","split","lineNo","length","colNo","Array","join","promiseImpl","Promise","getAsyncFunctionConstructor","constructor","trimLeft","trimStart","trimRight","trimEnd","hasOwnProp","prop","hasOwnProperty","call","copyProps","toObj","fromObj","key","trimWS","config","wsLeft","wsRight","leftTrim","rightTrim","isArray","autoTrim","trim","replace","escMap","replaceChar","s","XMLEscape","newStr","String","test","templateLitReg","singleQuoteReg","doubleQuoteReg","escapeRegExp","string","parse","buffer","trimLeftOfNextStr","lastIndex","parseOptions","plugins","i","plugin","processTemplate","rmWhitespace","pushString","strng","shouldTrimRightOfString","push","prefixes","exec","interpolate","raw","reduce","accumulator","prefix","parseOpenReg","RegExp","tags","parseCloseReg","m","index","precedingString","closeTag","currentObj","content","currentType","t","val","char","commentCloseInd","indexOf","singleQuoteMatch","doubleQuoteMatch","templateLitMatch","processAST","compileToString","Parse","res","include","includeFile","useWith","varName","compileScope","async","processFnString","buff","buffLength","returnStr","currentBlock","type","filter","autoEscape","Cacher","cache","define","get","remove","reset","load","cacheObj","templates","includeHelper","templateNameOrPath","data","template","e","getConfig","override","baseConfig","configure","options","compile","ctor","Function","SyntaxError","_BOM","getWholeFilePath","parentfile","isDirectory","includePath","path","resolve","dirname","extname","getPath","views","searchedPaths","pathOptions","JSON","stringify","filename","root","filepathCache","addPathToSearched","pathSearched","includes","searchViews","filePath","some","v","existsSync","match","formattedPath","pathFromRoot","readFile","readFileSync","toString","loadFile","noCache","compiledTemplate","handleCache","func","tryHandleCache","cb","templateFn","reject","result","newFileOptions","renderFile","renderConfig","callback","settings","viewOpts","renderFileAsync","includeFileHelper","templateAndConfig","templateFunc","render","renderAsync","assign"],"mappings":"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"}